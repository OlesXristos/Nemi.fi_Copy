import { Button } from "@/components/ui/button"
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import {
  Tabs,
  TabsContent,
  TabsList,
  TabsTrigger,
} from "@/components/ui/tabs"

export function TabsDemo() {
  return (
    <Tabs defaultValue="account" className="w-[400px]">
      <TabsList className="grid w-full grid-cols-2">
        <TabsTrigger value="account">Account</TabsTrigger>
        <TabsTrigger value="password">Password</TabsTrigger>
      </TabsList>
      <TabsContent value="account">
        <Card>
          <CardHeader>
            <CardTitle>Account</CardTitle>
            <CardDescription>
              Make changes to your account here. Click save when you're done.
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-2">
            <div className="space-y-1">
              <Label htmlFor="name">Name</Label>
              <Input id="name" defaultValue="Pedro Duarte" />
            </div>
            <div className="space-y-1">
              <Label htmlFor="username">Username</Label>
              <Input id="username" defaultValue="@peduarte" />
            </div>
          </CardContent>
          <CardFooter>
            <Button>Save changes</Button>
          </CardFooter>
        </Card>
      </TabsContent>
      <TabsContent value="password">
        <Card>
          <CardHeader>
            <CardTitle>Password</CardTitle>
            <CardDescription>
              Change your password here. After saving, you'll be logged out.
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-2">
            <div className="space-y-1">
              <Label htmlFor="current">Current password</Label>
              <Input id="current" type="password" />
            </div>
            <div className="space-y-1">
              <Label htmlFor="new">New password</Label>
              <Input id="new" type="password" />
            </div>
          </CardContent>
          <CardFooter>
            <Button>Save password</Button>
          </CardFooter>
        </Card>
      </TabsContent>
    </Tabs>
  )
}

















import { Button } from "@/components/ui/button"
import {
  Dialog,
  DialogClose,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"

export function DialogDemo() {
  return (
    <Dialog>
      <form>
        <DialogTrigger asChild>
          <Button variant="outline">Open Dialog</Button>
        </DialogTrigger>
        <DialogContent className="sm:max-w-[425px]">
          <DialogHeader>
            <DialogTitle>Edit profile</DialogTitle>
            <DialogDescription>
              Make changes to your profile here. Click save when you&apos;re
              done.
            </DialogDescription>
          </DialogHeader>
          <div className="grid gap-4">
            <div className="grid gap-3">
              <Label htmlFor="name-1">Name</Label>
              <Input id="name-1" name="name" defaultValue="Pedro Duarte" />
            </div>
            <div className="grid gap-3">
              <Label htmlFor="username-1">Username</Label>
              <Input id="username-1" name="username" defaultValue="@peduarte" />
            </div>
          </div>
          <DialogFooter>
            <DialogClose asChild>
              <Button variant="outline">Cancel</Button>
            </DialogClose>
            <Button type="submit">Save changes</Button>
          </DialogFooter>
        </DialogContent>
      </form>
    </Dialog>
  )
}




















'use client';
import { useRef, useEffect } from 'react';
import { motion, useMotionValue, useTransform, animate } from 'framer-motion';
import { Shield, ShieldAlert } from 'lucide-react';

export default function HeroHeadingClipPathDiv() {
  const containerRef = useRef<HTMLDivElement>(null);

  // 1) Створюємо MotionValue від 0 до 100
  const percent = useMotionValue(0);

  // 2) Трансформуємо percent у clipPath та позицію “left”
  const clipPath = useTransform(percent, (p) => `inset(0 0 0 ${p}%)`);
  const leftPercent = useTransform(percent, (p) => `${p}%`);

  // 3) Початкова анімація при маунті
  useEffect(() => {
    const controls = animate(percent, 100, {
      duration: 6,
      ease: 'easeOut',
    });
    return () => controls.stop();
  }, [percent]);

  // 4) Мишка: стоп анімації й миттєве оновлення
  const handleMouseMove = (e: React.MouseEvent) => {
    if (!containerRef.current) return;
    const { left, width } = containerRef.current.getBoundingClientRect();
    const raw = ((e.clientX - left) / width) * 100;
    const clamped = Math.min(Math.max(raw, 0), 100);
    // миттєво анімувати percent → clamped за 0.2с
    animate(percent, clamped, { duration: 0.2, ease: 'easeOut' });
  };

  // 5) При відльоті миші — довершити анімацію до 100%
  const handleMouseLeave = () => {
    // обчислимо залишок часу пропорційно
    const current = percent.get();
    const remaining = ((100 - current) / 100) * 6;
    animate(percent, 100, { duration: remaining, ease: 'easeOut' });
  };

  return (
    <div
      ref={containerRef}
      className="relative w-full overflow-hidden"
      onMouseMove={handleMouseMove}
      onMouseLeave={handleMouseLeave}>
      {/* білі лейбли Private/Exposed */}
      <motion.div
        className="m-2 px-3 py-1 gap-2 absolute top-0 text-xs font-medium uppercase flex items-center z-50 bg-green-600 text-white rounded-full shadow-sm"
        style={{
          left: leftPercent,
          translateX: '-115%',
        }}>
        <Shield size={12} />
        <span>Private</span>
      </motion.div>

      <motion.div
        className="absolute top-0 bottom-0 w-[2px] bg-black/80 dark:bg-white shadow-[0_0_15px_rgba(0,0,0,0.7)] z-40"
        style={{ left: leftPercent }}
      />

      <motion.div
        className="m-2 absolute top-0 text-xs font-medium uppercase flex items-center z-50 bg-red-500 text-white rounded-full shadow-sm  px-3 py-1  gap-2"
        style={{
          left: leftPercent,
          translateX: '15%', // зрушуємо Exposed вправо
        }}>
        <ShieldAlert size={12} />
        <span>Exposed</span>
      </motion.div>

      {/* заблюрений фон із новим текстом */}
      <div className="absolute inset-0 flex items-center pointer-events-none select-none shadow-inner rounded-md bg-black/20 dark:bg-black/40">
        <div className=" font-semibold w-full ">
          <div className=" text-start text-xs sm:text-sm md:text-base flex items-center ">
            <div className="space-y-3 w-full gap-1.5 sm:gap-2 px-2 sm:px-5 py-5 ">
              <div className=" items-center  transition-all duration-300 border rounded-full flex h-12 pl-2 sm:p-4 md:p-5 bg-slate-200/40 dark:bg-white/3  space-x-2 overflow-hidden">
                <Shield className="text-green-400 " size={20} />
                <span>██████ swapped</span>
                <span>
                  <span>███</span> ███
                </span>
                <span>for</span>
                <span>
                  <span>███</span> ███
                </span>
              </div>
              <div className=" items-center  transition-all duration-300 border rounded-full flex h-12 pl-2 sm:p-4 md:p-5 bg-slate-200/40 dark:bg-white/3  space-x-2 overflow-hidden">
                <Shield className="text-green-400" size={20} />
                <span>██████ swapped</span>
                <span> █████ for</span>
                <span>
                  <span>███</span> <span>██</span>
                </span>
              </div>
              <div className=" items-center  transition-all duration-300 border rounded-full flex h-12 pl-2 sm:p-4 md:p-5 bg-slate-200/40 dark:bg-white/3  space-x-2 overflow-hidden">
                <Shield className="text-green-400" size={20} />
                <span>███ swapped</span>
                <span>█████ for</span>
                <span>
                  <span>███</span> <span>███</span>
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* старий текст зверху, що відкривається clip-path */}
      <motion.div
        className=" inset-0 flex items-center pointer-events-none shadow-inner select-none bg-white dark:bg-black"
        style={{ clipPath }}>
        <div className=" font-semibold w-full ">
          <div className=" text-start text-xs sm:text-sm md:text-base flex items-center bg-white dark:bg-black ">
            <div className="space-y-3 w-full gap-1.5 sm:gap-2 px-2 sm:px-5 py-5">
              <div className="items-center transition-all duration-300 border rounded-full flex h-12 pl-2 sm:p-4 md:p-5 bg-slate-200 dark:bg-white/20 space-x-2 ">
                <ShieldAlert className="text-red-400" size={20} />
                <span>vitalik.eth swapped</span>
                <span className="text-[#ea789c] font-medium">1 ETH</span> <span>for</span>
                <span className="text-[#aca22b] font-medium overflow-hidden">4000 USDC</span>
              </div>
              <div className="items-center transition-all duration-300 border rounded-full flex h-12 pl-2 sm:p-4 md:p-5 bg-slate-200 dark:bg-white/20 space-x-2">
                <ShieldAlert className="text-red-400" size={20} />
                <span>Coinbase swapped</span>
                <span className="text-[#ea789c] font-medium">69 BTC</span> <span>for</span>
                <span className="text-[#aca22b] font-medium">1200 ETH</span>{' '}
                <span className="text-[#aca22b] font-medium"> </span>
              </div>
              <div className="items-center transition-all duration-300 border rounded-full flex h-12 pl-2 sm:p-4 md:p-5 bg-slate-200 dark:bg-white/20 space-x-2">
                <ShieldAlert className="text-red-400" size={20} />
                <span>You swapped</span>
                <span className="text-[#ea789c] font-medium">1000 DAI</span> <span>for</span>
                <span className="text-[#aca22b] font-medium">0.01 BTC</span>
              </div>
            </div>
          </div>
        </div>
      </motion.div>
    </div>
  );
}















'use client';
import { Input } from '@/components/ui/input';
import BgPazzle from '@/shared/components/shared/BgPazzle';
import WelcomeToTestNet from '@/shared/components/shared/WelcomeToTestNet';
import { Button } from '@/shared/components/ui/button';
import { ArrowUpRight, KeyRound, Lock } from 'lucide-react';
import Link from 'next/link';
import React, { useEffect, useState } from 'react';
import toast from 'react-hot-toast';
const code = [{ code: '111' }, { code: '222' }];
const PoolPage = () => {
  const [input, setInput] = useState('');
  const [unlocked, setUnlocked] = useState(false);
  const [isLoading, setIsLoading] = useState(true);
  useEffect(() => {
    const storedAccess = localStorage.getItem('hasEarlyCode');
    if (storedAccess === 'true') {
      setUnlocked(true);
    }
    setIsLoading(false);
  }, []);
  if (isLoading) return null;
  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();

    const isValid = code.some((item) => input.trim() === item.code);

    try {
      if (isValid) {
        setUnlocked(true);
        localStorage.setItem('hasEarlyCode', 'true');
        toast.success('Post created successfully');
      }
    } catch (error) {
      console.error('Failed to create post:', error);
      toast.error('Failed to create post');
    }
  };
  if (unlocked) {
    return (
      <>
        <WelcomeToTestNet />

        <div className="flex h-full items-center justify-center relative overflow-hidden">
          <BgPazzle />
          <div className="text-center">
            <h2 className="text-2xl font-bold mb-4">🎉 Access Granted</h2>
            <p>Welcome to the early access page!</p>
            {/* Тут можна рендерити будь-який інший вміст */}
          </div>
        </div>
        <footer>
          <div className="flex justify-between items-center border-t-1 py-4 px-10">
            <div className="">
              <p className="">© 2025 NEMI</p>
            </div>
            <div className="flex gap-3">
              <div className="flex gap-5 items-center">
                <p>Privacy Policy</p>
                <p>Terms of Service</p>
              </div>
              <div className=" flex justify-center gap-2 ">
                <Link
                  href="https://discord.gg/GBxFNJtz7p"
                  target="_blank"
                  rel="noopener noreferrer"
                  className=" bg-white rounded-full p-2 sm:p-3 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 focus:ring-offset-gray-900">
                  {' '}
                  <svg
                    width="16px"
                    height="16px"
                    viewBox="0 0 24 24"
                    role="img"
                    xmlns="http://www.w3.org/2000/svg">
                    <path d="M20.317 4.37a19.791 19.791 0 0 0-4.885-1.515.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 0 0-5.487 0 12.64 12.64 0 0 0-.617-1.25.077.077 0 0 0-.079-.037A19.736 19.736 0 0 0 3.677 4.37a.07.07 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 0 0 .031.057 19.9 19.9 0 0 0 5.993 3.03.078.078 0 0 0 .084-.028 14.09 14.09 0 0 0 1.226-1.994.076.076 0 0 0-.041-.106 13.107 13.107 0 0 1-1.872-.892.077.077 0 0 1-.008-.128 10.2 10.2 0 0 0 .372-.292.074.074 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 0 1 .078.01c.12.098.246.198.373.292a.077.077 0 0 1-.006.127 12.299 12.299 0 0 1-1.873.892.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 0 0 .084.028 19.839 19.839 0 0 0 6.002-3.03.077.077 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 0 0-.031-.03zM8.02 15.33c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.956-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.956 2.418-2.157 2.418zm7.975 0c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.955-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.946 2.418-2.157 2.418z" />
                  </svg>
                </Link>
                <Link
                  href="https://x.com/nemi_fi"
                  target="_blank"
                  rel="noopener noreferrer "
                  className=" bg-white rounded-full p-2 sm:p-3 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 focus:ring-offset-gray-900">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="16px"
                    height="16px"
                    fill="#232323"
                    viewBox="0 0 24 24"
                    className="dark:text-white">
                    <title>X</title>
                    <path d="M18.901 1.153h3.68l-8.04 9.19L24 22.846h-7.406l-5.8-7.584-6.638 7.584H.474l8.6-9.83L0 1.154h7.594l5.243 6.932ZM17.61 20.644h2.039L6.486 3.24H4.298Z"></path>
                  </svg>
                </Link>
                <Link
                  href="https://t.me/nemi_fi"
                  target="_blank"
                  rel="noopener noreferrer"
                  className="bg-white rounded-full p-2 sm:p-3 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 focus:ring-offset-gray-900">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="16px"
                    height="16px"
                    fill="#232323"
                    viewBox="0 0 24 24"
                    className="dark:text-white">
                    <title>Telegram</title>
                    <path d="M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.962 6.502-1.36 8.627-.168.9-.499 1.201-.82 1.23-.696.065-1.225-.46-1.9-.902-1.056-.693-1.653-1.124-2.678-1.8-1.185-.78-.417-1.21.258-1.91.177-.184 3.247-2.977 3.307-3.23.007-.032.014-.15-.056-.212s-.174-.041-.249-.024c-.106.024-1.793 1.14-5.061 3.345-.48.33-.913.49-1.302.48-.428-.008-1.252-.241-1.865-.44-.752-.245-1.349-.374-1.297-.789.027-.216.325-.437.893-.663 3.498-1.524 5.83-2.529 6.998-3.014 3.332-1.386 4.025-1.627 4.476-1.635z"></path>
                  </svg>
                </Link>
              </div>
            </div>
          </div>
        </footer>
      </>
    );
  }
  return (
    <>
      <div className=" flex h-[100vh] w-full justify-center items-center relative overflow-hidden">
        <BgPazzle />
        <WelcomeToTestNet />
        <div className="z-10">
          <div className="border rounded-xl p-7">
            <div>
              <div className="flex justify-center">
                <img src="/NemiDark.svg" alt="" className=" w-28 mb-5" />
              </div>
              <div className="flex justify-center gap-2">
                <span>
                  <KeyRound />
                </span>
                <h2 className="text-xl font-semibold mb-2">Early Access Required</h2>
              </div>
              <div className="flex justify-center">
                <div className="border border-gray-400 rounded-2xl bg-gray-400 p-0.5 w-10 flex justify-center mb-5"></div>
              </div>
            </div>
            <div className="mb-5">
              <p className="text-gray-500">
                {' '}
                This page is protected and requires an early access code.
              </p>
            </div>
            <form onSubmit={handleSubmit}>
              <div className="flex mb-3 gap-2">
                <span>
                  <Lock />
                </span>
                <h3 className="font-semibold">Access Code</h3>
              </div>
              <div className="flex flex-col space-y-6 mb-12">
                <Input
                  placeholder="Enter your access code"
                  type="text"
                  className="py-1 w-full "
                  value={input}
                  onChange={(e) => setInput(e.target.value)}
                />

                <Button
                  disabled={!input.trim()}
                  className={`${input.trim() ? '' : ' bg-gray-400 '}`}>
                  Unlock Access
                </Button>
              </div>
            </form>
            <div className="rounded-2xl border flex flex-col justify-center items-center p-2">
              <p className="text-gray-400">Need an access code? You can:</p>
              <div className="flex">
                <Link
                  href="https://tally.so/r/nP4VE1 "
                  target="_blank"
                  rel="noopener noreferrer"
                  className="border-b-2">
                  Get a code from the Nemi team
                </Link>
                <span>
                  <ArrowUpRight />
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
      <footer>
        <div className="flex justify-between items-center border-t-1 py-4 px-10">
          <div className="">
            <p className="">© 2025 NEMI</p>
          </div>
          <div className="flex gap-3">
            <div className="flex gap-5 items-center">
              <p>Privacy Policy</p>
              <p>Terms of Service</p>
            </div>
            <div className=" flex justify-center gap-2 ">
              <Link
                href="https://discord.gg/GBxFNJtz7p"
                target="_blank"
                rel="noopener noreferrer"
                className=" bg-white rounded-full p-2 sm:p-3 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 focus:ring-offset-gray-900">
                {' '}
                <svg
                  width="16px"
                  height="16px"
                  viewBox="0 0 24 24"
                  role="img"
                  xmlns="http://www.w3.org/2000/svg">
                  <path d="M20.317 4.37a19.791 19.791 0 0 0-4.885-1.515.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 0 0-5.487 0 12.64 12.64 0 0 0-.617-1.25.077.077 0 0 0-.079-.037A19.736 19.736 0 0 0 3.677 4.37a.07.07 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 0 0 .031.057 19.9 19.9 0 0 0 5.993 3.03.078.078 0 0 0 .084-.028 14.09 14.09 0 0 0 1.226-1.994.076.076 0 0 0-.041-.106 13.107 13.107 0 0 1-1.872-.892.077.077 0 0 1-.008-.128 10.2 10.2 0 0 0 .372-.292.074.074 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 0 1 .078.01c.12.098.246.198.373.292a.077.077 0 0 1-.006.127 12.299 12.299 0 0 1-1.873.892.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 0 0 .084.028 19.839 19.839 0 0 0 6.002-3.03.077.077 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 0 0-.031-.03zM8.02 15.33c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.956-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.956 2.418-2.157 2.418zm7.975 0c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.955-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.946 2.418-2.157 2.418z" />
                </svg>
              </Link>
              <Link
                href="https://x.com/nemi_fi"
                target="_blank"
                rel="noopener noreferrer "
                className=" bg-white rounded-full p-2 sm:p-3 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 focus:ring-offset-gray-900">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16px"
                  height="16px"
                  fill="#232323"
                  viewBox="0 0 24 24"
                  className="dark:text-white">
                  <title>X</title>
                  <path d="M18.901 1.153h3.68l-8.04 9.19L24 22.846h-7.406l-5.8-7.584-6.638 7.584H.474l8.6-9.83L0 1.154h7.594l5.243 6.932ZM17.61 20.644h2.039L6.486 3.24H4.298Z"></path>
                </svg>
              </Link>
              <Link
                href="https://t.me/nemi_fi"
                target="_blank"
                rel="noopener noreferrer"
                className="bg-white rounded-full p-2 sm:p-3 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 focus:ring-offset-gray-900">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16px"
                  height="16px"
                  fill="#232323"
                  viewBox="0 0 24 24"
                  className="dark:text-white">
                  <title>Telegram</title>
                  <path d="M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.962 6.502-1.36 8.627-.168.9-.499 1.201-.82 1.23-.696.065-1.225-.46-1.9-.902-1.056-.693-1.653-1.124-2.678-1.8-1.185-.78-.417-1.21.258-1.91.177-.184 3.247-2.977 3.307-3.23.007-.032.014-.15-.056-.212s-.174-.041-.249-.024c-.106.024-1.793 1.14-5.061 3.345-.48.33-.913.49-1.302.48-.428-.008-1.252-.241-1.865-.44-.752-.245-1.349-.374-1.297-.789.027-.216.325-.437.893-.663 3.498-1.524 5.83-2.529 6.998-3.014 3.332-1.386 4.025-1.627 4.476-1.635z"></path>
                </svg>
              </Link>
            </div>
          </div>
        </div>
      </footer>
    </>
  );
};

export default PoolPage;

















'use client';
import { useRef, useState, useEffect } from 'react';
import { motion, easeOut } from 'framer-motion';

export default function InteractiveClipPath() {
  const containerRef = useRef<HTMLDivElement>(null);
  const [percent, setPercent] = useState(0);
  const [transition, setTransition] = useState({ duration: 6, ease: easeOut });
  const animationTimeout = useRef<NodeJS.Timeout | null>(null);

  // Автоматичний старт анімації при завантаженні сторінки
  useEffect(() => {
    // Через 100мс починаємо анімацію (щоб відмалювало початковий стан)
    animationTimeout.current = setTimeout(() => {
      setTransition({ duration: 6, ease: easeOut });
      setPercent(100);
    }, 100);

    return () => {
      if (animationTimeout.current) clearTimeout(animationTimeout.current);
    };
  }, []);

  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {
    if (!containerRef.current) return;
    const rect = containerRef.current.getBoundingClientRect();
    const rawPercent = ((e.clientX - rect.left) / rect.width) * 100;

    setTransition({ duration: 0.2, ease: easeOut });
    setPercent(Math.min(Math.max(rawPercent, 0), 100));
  };

  const handleMouseLeave = () => {
    setTransition({ duration: 6, ease: easeOut });
    setPercent(100);
  };

  const clipHide = `inset(0 0 0 ${percent}%)`;

  return (
    <div
      ref={containerRef}
      className="relative w-96 h-24 bg-gray-200 overflow-hidden rounded-xl"
      onMouseMove={handleMouseMove}
      onMouseLeave={handleMouseLeave}>
      {/* Новий текст позаду */}
      <div
        className="absolute top-0 left-0 w-full h-full bg-slate-200/40 backdrop-blur-sm rounded-xl flex items-center justify-center pointer-events-none shadow-inner"
        style={{ userSelect: 'none' }}>
        <div className="text-black font-semibold select-none"><span>███████████</span> swapped <span>█████</span> for <span>█████████</span> </div></div>
      </div>

      {/* Старий текст зверху з clipPath анімацією */}
      <motion.div
        className="absolute top-0 left-0 w-full h-full bg-slate-200/40 backdrop-blur-sm rounded-xl flex items-center justify-center pointer-events-none shadow-inner"
        animate={{ clipPath: clipHide }}
        initial={{ clipPath: 'inset(0 0 0 0%)' }}
        transition={transition}>
        <div className="text-black font-semibold select-none">Трек курсору 🖱️234324234234</div>
      </motion.div>
    </div>
  );
}

=======================

'use client';
import { useRef, useState, useEffect } from 'react';
import {
  animate,
  motion,
  MotionValue,
  spring,
  useAnimation,
  useMotionValue,
  useSpring,
  useTransform,
} from 'framer-motion';
import { Shield, ShieldAlert } from 'lucide-react';
interface InteractiveClipPathProps {
  privateText: React.ReactNode;
  text: React.ReactNode;
}
export default function ClipPathDiv({ privateText, text }: InteractiveClipPathProps) {
  const containerRef = useRef<HTMLDivElement>(null);
  const controls = useAnimation();
  const [percent, setPercent] = useState(0);
  const borderX = useMotionValue(0);
  const borderXPercent = useTransform(borderX, (v) => `${v}%`);

  useEffect(() => {
    const timer = setTimeout(() => {
      const controls = animate(borderX, 100, {
        duration: 6, // тривалість у секундах
        ease: 'easeOut',
      });

      controls.then(() => {
        console.log('Анімація завершена!');
      });

      return () => controls.stop();
    }, 100);

    return () => clearTimeout(timer);
  }, [borderX]);

  useEffect(() => {
    const timer = setTimeout(() => {
      controls.start({
        clipPath: `inset(0 0 0 100%)`,
        transition: { duration: 6, ease: 'easeOut' },
      });
    }, 100);
    return () => clearTimeout(timer);
  }, [controls, borderX]);

  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {
    if (!containerRef.current) return;
    const rect = containerRef.current.getBoundingClientRect();
    const rawPercent = ((e.clientX - rect.left) / rect.width) * 100;
    const clampedPercent = Math.min(Math.max(rawPercent, 0), 100);

    animate(borderX, clampedPercent, { duration: 0.2, ease: 'easeOut' });
    controls.start({
      clipPath: `inset(0 0 0 ${clampedPercent}%)`,
      transition: { duration: 0.2, ease: 'easeOut' },
    });
  };

  const handleMouseLeave = () => {
    const remainingPercent = 100 - percent; // calculate remaining percent
    const remainingTime = (remainingPercent / 100) * 6; // calculate remaining time based on total duration (6 seconds)
    setPercent(100);
    controls.start({
      clipPath: `inset(0 0 0 100%)`,
      transition: { duration: remainingTime, ease: 'easeOut' },
    });
  };

  return (
    <div
      ref={containerRef}
      className=" relative w-full h-full"
      onMouseMove={handleMouseMove}
      onMouseLeave={handleMouseLeave}>
      {/* Новий текст позаду без фону */}
      <div className="absolute top-0 left-0 bottom-0 h-full w-full overflow-hidden rounded-lg z-10"></div>
      <div className="absolute inset-0 flex items-center pointer-events-none select-none shadow-inner rounded-md w-full  dark:bg-slate-800/40 ">
        <div className=" font-semibold w-full gap-1.5 sm:gap-2 px-5 py-5">
          <span className=" text-start text-xs sm:text-sm md:text-base flex items-center ">
            <div className="space-y-5 w-full">
              <div className="border rounded-full flex p-5 bg-slate-200/40 space-x-2">
                <Shield className="text-green-400" size={20} />
                {privateText}
              </div>
              <div className="border rounded-full flex p-5 bg-slate-200/40 space-x-2">
                <Shield className="text-green-400" size={20} />
                {privateText}
              </div>
              <div className="border rounded-full flex p-5 bg-slate-200/40 space-x-2">
                <Shield className="text-green-400" size={20} />
                {privateText}
              </div>
            </div>
          </span>
        </div>
      </div>

      <motion.div
        className="m-2 absolute top-0 text-xs font-medium tracking-wider uppercase rounded-full flex items-center z-50 bg-green-600 text-white shadow-sm"
        style={{ left: borderXPercent, transform: 'translateX(-100%)' }} // розміщує ліворуч від бордера
      >
        <div className="flex px-3 py-1 items-center gap-2">
          <Shield size={12} />
          <span>Private</span>
        </div>
      </motion.div>
      <motion.div
        className="absolute top-0 bottom-0 w-[2px] bg-black z-40"
        style={{ left: borderXPercent }}
      />
      <motion.div
        className="m-2 absolute top-0 text-xs font-medium tracking-wider uppercase rounded-full flex items-center z-50 bg-red-500 text-white shadow-sm"
        style={{ left: borderXPercent }} // розміщує праворуч від бордера
      >
        <div className="flex px-3 py-1 items-center gap-2">
          <ShieldAlert size={12} />
          <span>Exposed</span>
        </div>
      </motion.div>
      {/* Старий текст зверху з clipPath анімацією */}
      <motion.div
        className="  inset-0 backdrop-blur-sm  flex items-center pointer-events-none shadow-inner select-none w-full"
        initial={{ clipPath: 'inset(0 0 0 0%)' }}
        animate={controls}>
        <div className="text-black font-semibold w-full">
          <span className=" text-xs sm:text-sm md:text-base flex items-center ">
            <div className="space-y-5 w-full gap-1.5 sm:gap-2 px-5 py-5">
              <div className=" border rounded-full flex p-5 bg-slate-200 space-x-2">
                <ShieldAlert className="text-red-400" size={20} />
                {text}
              </div>
              <div className=" border rounded-full flex p-5 bg-slate-200 space-x-2">
                <ShieldAlert className="text-red-400" size={20} />
                {text}
              </div>
              <div className=" border rounded-full flex p-5 bg-slate-200 space-x-2">
                <ShieldAlert className="text-red-400" size={20} />
                {text}
              </div>
            </div>
          </span>
        </div>
      </motion.div>
      {/* <motion.div
        className="  inset-0 bg-slate-200 backdrop-blur-sm rounded-full flex items-center pointer-events-none shadow-inner select-none"
        initial={{ clipPath: 'inset(0 0 0 0%)' }}
        animate={controls}>
        <div className="text-black font-semibold ">
          <span className=" text-xs sm:text-sm md:text-base flex items-center gap-1.5 sm:gap-2 px-5">
            <ShieldAlert className="text-red-400" size={20} /> {text}
          </span>
        </div>
      </motion.div>
      <motion.div
        className="  inset-0 bg-slate-200 backdrop-blur-sm rounded-full flex items-center pointer-events-none shadow-inner select-none"
        initial={{ clipPath: 'inset(0 0 0 0%)' }}
        animate={controls}>
        <div className="text-black font-semibold ">
          <span className=" text-xs sm:text-sm md:text-base flex items-center gap-1.5 sm:gap-2 px-5">
            <ShieldAlert className="text-red-400" size={20} /> {text}
          </span>
        </div>
      </motion.div> */}
    </div>
  );
}
